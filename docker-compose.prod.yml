version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-docai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-docai_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - docai-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-docai_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-docai_db}
      - FRONTEND_URL=${FRONTEND_URL:-https://your-domain.com}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-your-domain.com,www.your-domain.com}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS:-https://your-domain.com,https://www.your-domain.com}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_SECRET_KEY=${GOOGLE_SECRET_KEY}
      - GOOGLE_AUTH_CALLBACK_PATH=${GOOGLE_AUTH_CALLBACK_PATH:-/google/callback}
      - CKEDITOR_ACCESS_CREDS=${CKEDITOR_ACCESS_CREDS}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - docai-network
    ports:
      - "8000:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://your-domain.com/api}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-wss://your-domain.com/ws}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - docai-network
    ports:
      - "3000:3000"

  yjs-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python yjs_server.py
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    restart: unless-stopped
    networks:
      - docai-network
    ports:
      - "1234:1234"

volumes:
  postgres_data:

networks:
  docai-network:
    driver: bridge
